// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MyTeams.Frontend.ServicePoC.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Message
    {
        /// <summary>
        /// Initializes a new instance of the Message class.
        /// </summary>
        public Message() { }

        /// <summary>
        /// Initializes a new instance of the Message class.
        /// </summary>
        public Message(Channel channel, User fromProperty, string text, DateTime? sent = default(DateTime?), int? channelId = default(int?), int? fromId = default(int?), int? id = default(int?), byte[] rowVersion = default(byte[]))
        {
            Sent = sent;
            Channel = channel;
            ChannelId = channelId;
            FromProperty = fromProperty;
            FromId = fromId;
            Text = text;
            Id = id;
            RowVersion = rowVersion;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sent")]
        public DateTime? Sent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "channel")]
        public Channel Channel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "channelId")]
        public int? ChannelId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "from")]
        public User FromProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fromId")]
        public int? FromId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "text")]
        public string Text { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "rowVersion")]
        public byte[] RowVersion { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Channel == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Channel");
            }
            if (FromProperty == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FromProperty");
            }
            if (Text == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Text");
            }
            if (this.Channel != null)
            {
                this.Channel.Validate();
            }
            if (this.FromProperty != null)
            {
                this.FromProperty.Validate();
            }
        }
    }
}
