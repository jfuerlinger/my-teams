// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace MyTeams.Frontend.ServicePoC.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Channel
    {
        /// <summary>
        /// Initializes a new instance of the Channel class.
        /// </summary>
        public Channel() { }

        /// <summary>
        /// Initializes a new instance of the Channel class.
        /// </summary>
        public Channel(string displayName, Team team, int? teamId = default(int?), IList<Message> messages = default(IList<Message>), int? id = default(int?), byte[] rowVersion = default(byte[]))
        {
            DisplayName = displayName;
            Team = team;
            TeamId = teamId;
            Messages = messages;
            Id = id;
            RowVersion = rowVersion;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "team")]
        public Team Team { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "teamId")]
        public int? TeamId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "messages")]
        public IList<Message> Messages { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "rowVersion")]
        public byte[] RowVersion { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (DisplayName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DisplayName");
            }
            if (Team == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Team");
            }
            if (this.DisplayName != null)
            {
                if (this.DisplayName.Length < 5)
                {
                    throw new ValidationException(ValidationRules.MinLength, "DisplayName", 5);
                }
            }
            if (this.Team != null)
            {
                this.Team.Validate();
            }
            if (this.Messages != null)
            {
                foreach (var element in this.Messages)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
